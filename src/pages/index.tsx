import Head from "next/head";
import { FC, useCallback, useState } from "react";
import { useForm } from "react-hook-form";
import styles from "@/styles/Home.module.css";
import { getHello } from "@/api/hello";

type LoginFormType = {
  userId: string;
  password: string;
};

const Signin: FC = () => {
  const [movie, setMovie] = useState([]);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<LoginFormType>({
    mode: "onSubmit",
    defaultValues: {
      userId: "",
      password: "",
    },
  });

  const onSubmit = useCallback(async (data: LoginFormType) => {
    console.log(data);
    const response = await getHello();
    console.log(response);
  }, []);

  return (
    <>
      <Head>
        <title>PAPATOMO</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div className="mb-8">
            <label htmlFor="userId" className="mb-2 block text-sm font-bold">
              userId
            </label>
            <input
              type="text"
              id="userId"
              placeholder="hey@chrisoncode.io"
              className={`block w-full border-b-2 bg-transparent py-2 px-4 placeholder-purple-500  outline-none focus:bg-purple-600 `}
              {...register("userId")}
            />
            {errors.userId && (
              <p className="mt-2 text-sm text-red-500">
                A valid email is required.
              </p>
            )}
          </div>

          <div className="mb-8">
            <label
              htmlFor="password"
              className={`mb-2 block text-sm font-bold ${
                errors.password ? "text-red-400" : "text-purple-400"
              }`}
            >
              Password
            </label>
            <input
              type="password"
              id="password"
              placeholder="superduperpassword"
              className="block w-full border-b-2 bg-transparent py-2 px-4 text-purple-200 placeholder-purple-500 outline-none focus:bg-purple-600"
              {...register("password")}
            />
            {errors.password && (
              <p className="mt-2 text-sm text-red-500">
                Your password is required.
              </p>
            )}
          </div>

          <button className="inline-block rounded bg-yellow-500 py-2 px-5 text-sm text-yellow-800 shadow">
            Submit
          </button>
        </form>
      </main>
    </>
  );
};
export default Signin;
